version: '3.8'
services:
  coordinator:
    image: "redis:latest"
    command: redis-server --include /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  hot-shard1:
    image: "redis:latest"
    command: redis-server --include /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  hot-shard2:
    image: "redis:latest"
    command: redis-server --include /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  # hot-shard3:
  #   image: "redis:latest"
  # hot-shard4:
  #   image: "redis:latest"
  # hot-shard5:
  #   image: "redis:latest"
  timeseries_1:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - coo=redis://coordinator:6379/
      - clients=5
      - mode=FILE
      # - hot=redis://hot-shard1:6379/
      - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
      # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
      - cold=/raw-db/ /raw-db/
    depends_on:
      - "coordinator" 
      - "hot-shard1"
      - "hot-shard2"
      # - "hot-shard3"
      # - "hot-shard4"
      # - "hot-shard5"
    volumes:
      - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  timeseries_2:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - coo=redis://coordinator:6379/
      - clients=5
      - mode=FILE
      # - hot=redis://hot-shard1:6379/
      - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
      # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
      - cold=/raw-db/ /raw-db/
    depends_on:
      - "coordinator" 
      - "hot-shard1"
      - "hot-shard2"
      # - "hot-shard3"
      # - "hot-shard4"
      # - "hot-shard5"
    volumes:
      - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  timeseries_3:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - coo=redis://coordinator:6379/
      - clients=5
      - mode=FILE
      # - hot=redis://hot-shard1:6379/
      - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
      # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
      - cold=/raw-db/ /raw-db/
    depends_on:
      - "coordinator" 
      - "hot-shard1"
      - "hot-shard2"
      # - "hot-shard3"
      # - "hot-shard4"
      # - "hot-shard5"
    volumes:
      - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  timeseries_4:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - coo=redis://coordinator:6379/
      - clients=5
      - mode=FILE
      # - hot=redis://hot-shard1:6379/
      - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
      # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
      - cold=/raw-db/ /raw-db/
    depends_on:
      - "coordinator" 
      - "hot-shard1"
      - "hot-shard2"
      # - "hot-shard3"
      # - "hot-shard4"
      # - "hot-shard5"
    volumes:
      - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  # timeseries_5:
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   environment:
  #     - coo=redis://coordinator:6379/
  #     - clients=10
  #     - root=80000
  #     # - hot=redis://hot-shard1:6379/
  #     # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
  #     - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
  #     # - cold=/raw-db/ /raw-db/
  #   depends_on:
  #     - "coordinator" 
  #     - "hot-shard1"
  #     - "hot-shard2"
  #     - "hot-shard3"
  #     # - "hot-shard4"
  #     # - "hot-shard5"
  #   volumes:
  #     - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  # timeseries_6:
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   environment:
  #     - coo=redis://coordinator:6379/
  #     - clients=10
  #     - root=96000
  #     # - hot=redis://hot-shard1:6379/
  #     # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
  #     - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
  #     # - cold=/raw-db/ /raw-db/
  #   depends_on:
  #     - "coordinator" 
  #     - "hot-shard1"
  #     - "hot-shard2"
  #     - "hot-shard3"
  #     # - "hot-shard4"
  #     # - "hot-shard5"
  #   volumes:
  #     - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  # timeseries_7:
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   environment:
  #     - coo=redis://coordinator:6379/
  #     - clients=10
  #     - root=112000
  #     # - hot=redis://hot-shard1:6379/
  #     # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
  #     - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
  #     # - cold=/raw-db/ /raw-db/
  #   depends_on:
  #     - "coordinator" 
  #     - "hot-shard1"
  #     - "hot-shard2"
  #     - "hot-shard3"
  #     # - "hot-shard4"
  #     # - "hot-shard5"
  #   volumes:
  #     - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  # timeseries_8:
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   environment:
  #     - coo=redis://coordinator:6379/
  #     - clients=10
  #     - root=128000
  #     # - hot=redis://hot-shard1:6379/
  #     # - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/
  #     - hot=redis://hot-shard1:6379/ redis://hot-shard2:6379/ redis://hot-shard3:6379/
  #     # - cold=/raw-db/ /raw-db/
  #   depends_on:
  #     - "coordinator" 
  #     - "hot-shard1"
  #     - "hot-shard2"
  #     - "hot-shard3"
  #     # - "hot-shard4"
  #     # - "hot-shard5"
  #   volumes:
  #     - ./raw-db/:/usr/src/app/examples/wrap-it-into-microservice/raw-db/
  loadbalancer:
    build:
      context: nginx
      dockerfile: docker
    ports:
      - "3001:3000"
    logging:
      driver: none
    depends_on:
      - "timeseries_1"
      - "timeseries_2"
      - "timeseries_3"
      - "timeseries_4"
  jmeter:
    image: "justb4/jmeter:latest"
    container_name: jmeter
    depends_on: 
      - "loadbalancer"
    volumes:
      - ./:/app
    working_dir: /app
    entrypoint:
      - "/entrypoint.sh" 
      - "-n" 
      - "-t /app/PerfTest.jmx"
      - "-l /app/jmeter.jtl"
      - "-j /app/jmeter.log"
      - "-f" 
      - "-e" 
      - "-o /app/results"
      - "-JTARGET_HOST=loadbalancer"
      - "-JTARGET_PORT=3000"
  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - '8001:8001'
    volumes:
      - ./redis-insight/:/db
  # cold-shard1:
  #   image: postgres:11.4
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=userxyz
  #     - POSTGRES_PASSWORD=password123
  #     - POSTGRES_DB=mydb1
  #   ports:
  #     - "5434:5432"